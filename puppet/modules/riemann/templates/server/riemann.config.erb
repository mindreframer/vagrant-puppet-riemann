; vim: filetype=clojure
; http://riemann.io/api/riemann.server.html

(logging/init :file "/var/log/riemann.log")

(tcp-server :host "<%= scope.lookupvar('riemann::params::riemann_server_ip') %>" :port 5555)
(udp-server :host "<%= scope.lookupvar('riemann::params::riemann_server_ip') %>" :port 5555)
(ws-server :host "<%= scope.lookupvar('riemann::params::riemann_server_ip') %>" :port 5556)

(periodically-expire 10)

(let [client (tcp-client :host "<%= scope.lookupvar('riemann::params::riemann_server_ip') %>")
      ; Keep events for 5 minutes by default
      index (default :ttl 300 (update-index (index)))
      hosts (atom #{})]

  (streams
    ;(with {:metric_f 1 :host nil :state "ok" :service "events/sec"}
    ;  (rate 5 index))

    (where (service #"^per")
      (percentiles 5 [0 0.5 0.95 0.99 1]
        index))

    ; Log expired events.
    (expired
      (fn [event] (info "expired" event)))


    ; (fn [event] ;; pass the event through a function that:
    ;   (swap! hosts conj (:host event)) ;; adds the event host into the host set
    ;   (prn :hosts @hosts) ;; prints out the host set
    ;   (index {:service "unique hosts" ;; indexes the count
    ;           :time (unix-time)
    ;           :metric (count @hosts)})))

    ;; index everything
    index
))